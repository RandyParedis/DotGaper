https://graphviz.readthedocs.io/en/stable/manual.html#using-raw-dot
https://stackoverflow.com/questions/14885481/how-to-highlight-a-string-of-text-within-a-qtextedit

https://ogdf.uos.de

Creating an rcc from a *.qrc file (example for tango icon set):
    pyrcc5 -o tango.py -compress 9 tango.qrc

TODO LIST
    [0.2.3] {Universalisation}
    - Features:
        - Restart
        - Read Only Files
        - Listen on host:port address
        - Show all errors during parsing
        - Add Bookmarks?
        - Add "Search" Menu, which contains "Find & Replace", "Goto Line", "Next Error", "Prev Error" etc...
    - Change Preferences Loading to dict instead of lines
            I.e. - apply   :: self.preferences.setValue("autohide", self.check_autohide.isChecked())
                 - rectify :: self.check_autohide.setChecked(bool(self.preferences.value("autohide", True)))
                 ==> {"autohide": "check_autohide"}   // Might also require a function for more complex feats
                 The above might be settable via dynamic properties on the designer. If we now use a dictionary
                 to map special cases, this can be done.
    - Better indentation logic
    - Fix comments: identify indents before/after comment signs
    - Update Graphviz plugin to work better
        - Add all syntactical errors
    - Simple (builtin) ImageRenderer
    - Other plugins by default (see Future.md)
    	- Pillow to Wand? http://docs.wand-py.org/en/0.6.1/
    [0.2.4] {Styling Update}
    - Styles/themes via CSS vs INI      https://doc.qt.io/qt-5/stylesheet-examples.html
        - Style for whitespace characters? ==> Add automatically in SyntaxHighligter
        - More styles: https://tmtheme-editor.herokuapp.com/#!/editor/theme/Monokai
        - Preferences menu: https://www.jetbrains.com/help/idea/configuring-colors-and-fonts.html
    - Add images to documentation AND wizards
    - Add icon to all plugins
    - Add icon to completer types
    - Tree Indentation guides
    - Max column size indicator
    - Apply button in preferences (which keeps the preferences open)
    - Auto-update
    	- https://hackthology.com/how-to-write-self-updating-python-programs-using-pip-and-git.html
    [0.3.0]
    - More complex rendering mechanics
        - text/HTML
        - OGDF
            (Add pre-transform to Engine, i.e. 'transform from one file type to another')
        - 3D (graphics engine from Computer Graphics?)
    []
    - Add tests!
    - Fix in-code TODOs
    - Hints on startup?

Version 1.0.0 name ideas:
    - Wishing Table (ref to "the Wishing Table, Gold-Ass and the Cudgel in the Sack")
    - Wannabe Unicorn
    - Carrot-on-a-Stick
    - Land of Toys
