https://graphviz.readthedocs.io/en/stable/manual.html#using-raw-dot
https://stackoverflow.com/questions/14885481/how-to-highlight-a-string-of-text-within-a-qtextedit

https://ogdf.uos.de

Creating a package:
    pyinstaller __main__.py -n GraphDonkey --add-data ./vendor/:vendor/ -y

Creating an rcc from a *.qrc file (example for tango icon set):
    pyrcc5 -o tango.py -compress 9 tango.qrc

TODO LIST
    - Smart File Encoding detection
            ==> Document-specific properties?
    - Force autocompleter to suggest context-specific items
    - Other file types
        - Simple txt (no highlighting/engine)
        - dot/graphviz itself
            - attribute checking?
        - xdot?
        - flowchart
            - function calls
        - lark
        - plain/plain-ext
        - pic
        - PlantUML?
        - Mermaid?
        - SQL?
        - OGDF
        - Text Engine?
        - Convertion function
            - Open new file with filetype gv, transformed from the file ext
        - Plugin System
            - Enabling/Disabling
                ==> Separate tab in Preferences window?
            - Autocompleter?
            - Snippets?
            - Engine per file type instead of globally
            - Export:
                - For all/current filetype(s), list all export possibilities
                - When user chooses export type, export to that type using the current engine, or the first possible
                  engine.
                  If you do not support exporting to this file, yield error and retry.
    - Finish documentation
    - Update all highlighting on typing!
    - CodeEditor must be language-specific!
    - Last line = newline
    - Fix in-code TODOs

Version 1.0.0 name ideas:
    - Wishing Table (ref to "the Wishing Table, Gold-Ass and the Cudgel in the Sack")
    - Wannabe Unicorn
